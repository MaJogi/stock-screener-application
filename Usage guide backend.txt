Example of usage:
UPDATED: 09.05.2021 17:35

1.
// POST method with included key: file, value: exampleFinStatement.csv
localhost:8080/uploadFile
// now file is stored under upload/files/ folder. Example: upload/files/exampleFinStatement.csv

2. GET method to read csv file that is already stored under upload/files/ folder.
http://localhost:8080/csv/readAndSave/{ticker}}/{filenameWithout ".csv"}}.
Example: http://localhost:8080/csv/readAndSave/TKM1T/tkm-2017_q2_CSV_modified_by_frontend
// Now data is persisted in Postgre database.

3. GET method to get information about a company by ticker.
http://localhost:8080/companies/{ticker}.
Example: http://localhost:8080/TKM1T
Example json result:
{
"ticker_id": "TKM1T",
"name": "TALLINNA KAUBAMAJA GRUPP",
"employees": null,
"sector": "Retail Trade",
"industry": "Food Retail",
"financialsDaily": {}, // 18 items
"financialsQuarterly": {}, // 27 items
"incomeRawStatements": [], // 4 items
"balanceRawStatements": [], // 2 items
"cashflowRawStatements": [] // 2 items
}

(by clicking on unfold button, you can see all of the statements and its
properties with values.)

"cashflowRawStatements": [
{
"cashflow_raw_id": 1,
"dateOrPeriod": "6 months 2017",
"attributes": [
{
"attr_id": 73,
"fieldName": "Net profit",
"value": 8.379
},
{
"attr_id": 74,
"fieldName": "Income tax on dividends (note: 15)",
"value": 6.371
},
...

4. GET method to get financial statement information about specific period/date.
http://localhost:8080/companies/{ticker}}/{"cashflow", "income", "balance"}}/{date_or_period}}
Example: http://localhost:8080/companies/TKM1T/cashflow/Q2%202016 (browser converted 'Q2 2016' to 'Q2%202016')

5. GET method to get all company specific financial statements
http://localhost:8080/companies/{ticker}}/{"incomeStatements", "cashflowStatements", "balanceStatements"}
Example: http://localhost:8080/companies/TKM1T/incomeStatements


///

Each financial statemant has its own controller.
Right now it can be used to get all instances and specific instance by id.

Ex: /rawCashflowStats and /rawCashflowStats/{id}
Ex: /rawIncomeStats and /rawIncomeStats/{id}
Ex: /rawBalanceSheets and /rawBalanceSheets/{id}

Nüüd tuleb aruannete aruannete confide loomise osa
Siin on kõik meetodid POSTid. Ehk Postmaniga saab saata andmeid nendele endpointidele.

_____ConfigurationController____________

localhost:8080/configuration/...
1. Valemi confi loomine incomeStatementi jaoks. Ticker on firma, mille jaoks conf luuakse. Income on see aruanne, mille jaoks luuakse.
@PostMapping(value = "/createMapping/{ticker}/income")
Ex: http://localhost:8080/configuration/createMapping/TKM1T/income
Saata tuleb JSON fail kujul:

{
    "companyConfigCollectionId": 1,
    "dateFrom": "2017",
    "dateTo": null,
    "revenue": "#Revenue + #Other_operating_income",
    "costOfRevenue": "#Cost_of_sales",
    "grossProfitRatio": "(#Revenue - #Cost_of_sales) / (#Revenue + #Other_operating_income)",
    ...
}
Peale seda on conf loodud ning selle valemeid saab kasutada standartse kasumiaruande tegemisel.

//////////////////////////

______________StandardObjCreationController_____________
http://localhost:8080/groupOfStandardStatements/TKM1T/create/forPeriod/30.06.2017/
2. Standartse kasumiaruande loomine kindla firma jaoks



Muutusi firma aruannetes ja aruannete konfiguratsioonides võib näha siin:
http://localhost:8080/companies/TKM1T




